(()=>{var U=Object.defineProperty;var l=(e,t)=>U(e,"name",{value:t,configurable:!0});var i=Object.getPrototypeOf,w,b,p,m,D={isConnected:1},L=1e3,g,W={},q=i(D),O=i(i),c,k=l((e,t,s,r)=>(e??(setTimeout(s,r),new Set)).add(t),"addAndScheduleOnFirst"),I=l((e,t,s)=>{let r=p;p=t;try{return e(s)}catch(n){return console.error(n),s}finally{p=r}},"runAndCaptureDeps"),v=l(e=>e.filter(t=>t._dom?.isConnected),"keepConnected"),T=l(e=>g=k(g,e,()=>{for(let t of g)t._bindings=v(t._bindings),t._listeners=v(t._listeners);g=c},L),"addStatesToGc"),y={get val(){return p?._getters?.add(this),this.rawVal},get oldVal(){return p?._getters?.add(this),this._oldVal},set val(e){p?._setters?.add(this),e!==this.rawVal&&(this.rawVal=e,this._bindings.length+this._listeners.length?(b?.add(this),w=k(w,this,B)):this._oldVal=e)}},$=l(e=>({__proto__:y,rawVal:e,_oldVal:e,_bindings:[],_listeners:[]}),"state"),_=l((e,t)=>{let s={_getters:new Set,_setters:new Set},r={f:e},n=m;m=[];let o=I(e,s,t);o=(o??document).nodeType?o:new Text(o);for(let a of s._getters)s._setters.has(a)||(T(a),a._bindings.push(r));for(let a of m)a._dom=o;return m=n,r._dom=o},"bind"),F=l((e,t=$(),s)=>{let r={_getters:new Set,_setters:new Set},n={f:e,s:t};n._dom=s??m?.push(n)??D,t.val=I(e,r,t.rawVal);for(let o of r._getters)r._setters.has(o)||(T(o),o._listeners.push(n));return t},"derive"),N=l((e,...t)=>{for(let s of t.flat(1/0)){let r=i(s??0),n=r===y?_(()=>s.val):r===O?_(s):s;n!=c&&e.append(n)}return e},"add"),E=l((e,t,...s)=>{let[{is:r,...n},...o]=i(s[0]??0)===q?s:[{},...s],a=e?document.createElementNS(e,t,{is:r}):document.createElement(t,{is:r});for(let[d,f]of Object.entries(n)){let x=l(h=>h?Object.getOwnPropertyDescriptor(h,d)??x(i(h)):c,"getPropDescriptor"),G=t+","+d,C=W[G]??=x(i(a))?.set??0,V=d.startsWith("on")?(h,R)=>{let A=d.slice(2);a.removeEventListener(A,R),a.addEventListener(A,h)}:C?C.bind(a):a.setAttribute.bind(a,d),S=i(f??0);d.startsWith("on")||S===O&&(f=F(f),S=y),S===y?_(()=>(V(f.val,f._oldVal),a)):V(f)}return N(a,o)},"tag"),P=l(e=>({get:l((t,s)=>E.bind(c,e,s),"get")}),"handler"),M=l((e,t)=>t?t!==e&&e.replaceWith(t):e.remove(),"update"),B=l(()=>{let e=0,t=[...w].filter(r=>r.rawVal!==r._oldVal);do{b=new Set;for(let r of new Set(t.flatMap(n=>n._listeners=v(n._listeners))))F(r.f,r.s,r._dom),r._dom=c}while(++e<100&&(t=[...b]).length);let s=[...w].filter(r=>r.rawVal!==r._oldVal);w=c;for(let r of new Set(s.flatMap(n=>n._bindings=v(n._bindings))))M(r._dom,_(r.f,r._dom)),r._dom=c;for(let r of s)r._oldVal=r.rawVal},"updateDoms"),j={tags:new Proxy(e=>new Proxy(E,P(e)),P()),hydrate:l((e,t)=>M(e,_(t,e)),"hydrate"),add:N,state:$,derive:F};function u(e,t,s){let r=[];if(s&&(r[0]=s),t||(t="span"),Array.isArray(e)){let n=e.length,o=n;for(;n;--n)r.push(e[o-n])}else r.push(e);return j.tags[t].apply(null,r)}l(u,"htm");function H(){return u([{title:"Lo-Fi",src:"https://w.soundcloud.com/player/?visual=true&url=https%3A%2F%2Fapi.soundcloud.com%2Fplaylists%2F1504987279&show_artwork=true&secret_token=s-cLlbzYSiZH8"},{title:"Funk",src:"https://w.soundcloud.com/player/?visual=true&url=https%3A%2F%2Fapi.soundcloud.com%2Fplaylists%2F1849472907&show_artwork=true&show_comments=false"},{title:"Open Format",src:"https://w.soundcloud.com/player/?visual=true&url=https%3A%2F%2Fapi.soundcloud.com%2Fplaylists%2F1881155051&show_artwork=true&show_comments=false&secret_token=s-vDR8Vhv30C3"},{title:"Alternative",src:"https://w.soundcloud.com/player/?visual=true&url=https%3A%2F%2Fapi.soundcloud.com%2Fplaylists%2F1946144887&show_artwork=true&show_comments=false&secret_token=s-bSvcXntVHjs"},{title:"Pop",src:"https://w.soundcloud.com/player/?visual=true&url=https%3A%2F%2Fapi.soundcloud.com%2Fplaylists%2F1986353964&show_artwork=true&show_comments=false&secret_token=s-mJUIl9SwEG1"}].flatMap(t=>[u(t.title,"h2"),u(void 0,"div",{class:"home-separator"}),u(void 0,"br"),u(u(void 0,"iframe",{src:t.src,style:"width: 175%; height: 100%; position: absolute; border: 0px;",allowfullscreen:"",scrolling:"no"}),"div",{style:"width: 36%; height:16em; position: relative;"}),u(void 0,"br")]),"div",{style:"max-width: 100%;"})}l(H,"Playlists");})();
